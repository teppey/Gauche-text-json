これはRFC4627で定義されたJSON(Javascript Object Notation)を読み書きする
モジュールです。


動作環境:

  Gauche 0.9.1 以降

インストール:

  From tarball

      $ gauche-package install [-S root] Gauche-text-json-0.2.tgz

  From source

      $ git clone git://github.com/teppey/Gauche-text-json.git
      $ cd Gauche-text-json
      $ ./DIST gen
      $ ./configure
      $ make
      $ make -s check
      $ [sudo] make install


Module API:

Module text.json
================

このモジュールはRFC4627[1]で定義されたJSON(Javascript Object Notation)を
扱う手続きを提供します。

Gauche 0.9.1よりrfc.json[2]モジュールが標準で添付されるため、通常このモジュー
ルを使う必要はありません。もしrfc.jsonで今のところ提供されていない機能(マッ
ピングのカスタマイズ・出力のpretty print)が使いたいというような場合、このモ
ジュールは有用かもしれません。

[1] http://www.ietf.org/rfc/rfc4627
[2] http://practical-scheme.net/gauche/man/?l=jp&p=rfc.json


Constant: json-mime-type

  "application/json", that is the MIME type of JSON.

Function: json-read :optional input

  現在の入力ポートから読んだ文字列をJSONとしてパーズし、結果を返します。省略
  可能な引数inputは入力ポートか文字列で、指定された場合はそれを入力としてパー
  ズします。JSONのデータ型は、デフォルトでは以下のようにマッピングされます。
  後述するパラメータを使うことでオブジェクトと配列のマッピングを変更すること
  ができます。

           JSON    |    戻り値
     --------------+---------------
      オブジェクト |   連想リスト
      配列         |   ベクタ
      数値         |   数値
      文字列       |   文字列
      true         |   #t
      false        |   #f
      null         |   シンボルnull

Function: json-write obj :optional output

  objをJSON文字列として現在の出力ポートに書き出します。省略可能な引数 output
  には出力先を指定します。 outputが出力ポートであれば、結果はそのポートに書
  き出され、#fであれば結果は文字列として返されます。

  出力はobjのクラスによって以下のようにマッピングされます。デフォルトではリ
  ストを連想リストと考え、オブジェクトとして出力しますが、この挙動は後述の
  json-object-from-alist?パラメータに#fを与えることにより、配列と見なされる
  よう変更されます。

      (class-of obj)                    JSON
    =================================================
      <dictionary> or <list>            オブジェクト
    -------------------------------------------------
      <sequence>                        配列
    -------------------------------------------------
      <number>                          数値
    -------------------------------------------------
      <string>                          文字列
    -------------------------------------------------
      <boolean> and (eq? obj #t)        true
      <symbol>  and (eq? obj 'true)
    -------------------------------------------------
      <boolean> and (eq? obj #f)        false
      <symbol>  and (eq? obj 'false)
    -------------------------------------------------
      <symbol>  and (eq? obj 'null)     null


Function: json-write* obj :optional output

  json-writeと同様にobjをJSON文字列として書き出しますが、出力は見やすいよう
  にインデントされます。インデント幅はjson-indent-widthパラメータを使って変
  更することができます。

Parameter: json-indent-width

  json-write*で出力されるJSONテキストのインデント幅を保持するパラメータです。


マッピングのカスタマイズ
------------------------

Parameter: json-object-to :optional thunk


Parameter: json-array-to :optional thunk

Parameter: json-object-from-alist?
